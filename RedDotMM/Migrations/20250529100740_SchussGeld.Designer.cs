// <auto-generated />
using System;
using RedDotMM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace RedDotMM.Migrations
{
    [DbContext(typeof(RedDotMMContext))]
    [Migration("20250529100740_SchussGeld")]
    partial class SchussGeld
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("RedDotMM.Model.Ergebnis", b =>
                {
                    b.Property<Guid>("ErgebnisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("BezahltesSchussGeld")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ErgebnisAbgeschlossen")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LfdNummer")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SchuetzeID")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("WettbewerbGuid")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Zeitstempel")
                        .HasColumnType("TEXT");

                    b.HasKey("ErgebnisId");

                    b.HasIndex("SchuetzeID");

                    b.HasIndex("WettbewerbGuid");

                    b.ToTable("Ergebnisse");
                });

            modelBuilder.Entity("RedDotMM.Model.Schuetze", b =>
                {
                    b.Property<Guid>("SchuetzenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("LfdNummer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WettbewerbID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Zusatz")
                        .HasColumnType("TEXT");

                    b.HasKey("SchuetzenId");

                    b.HasIndex("WettbewerbID");

                    b.ToTable("Schuetzen");
                });

            modelBuilder.Entity("RedDotMM.Model.Schuss", b =>
                {
                    b.Property<Guid>("SchussId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("Distanz")
                        .HasColumnType("REAL");

                    b.Property<Guid>("ErgebnisID")
                        .HasColumnType("TEXT");

                    b.Property<int>("LfdSchussNummer")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Typ")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Wert")
                        .HasColumnType("REAL");

                    b.Property<double>("X")
                        .HasColumnType("REAL");

                    b.Property<double>("Y")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Zeitstempel")
                        .HasColumnType("TEXT");

                    b.HasKey("SchussId");

                    b.HasIndex("ErgebnisID");

                    b.ToTable("Schuesse");
                });

            modelBuilder.Entity("RedDotMM.Model.Wettbewerb", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Probeschuss")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SchussGeld")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Teilerwertung")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Wertung")
                        .HasColumnType("INTEGER");

                    b.HasKey("Guid");

                    b.ToTable("Wettbewerbe");
                });

            modelBuilder.Entity("RedDotMM.Model.Ergebnis", b =>
                {
                    b.HasOne("RedDotMM.Model.Schuetze", "Schuetze")
                        .WithMany("Ergebnisse")
                        .HasForeignKey("SchuetzeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RedDotMM.Model.Wettbewerb", null)
                        .WithMany("Ergebnisse")
                        .HasForeignKey("WettbewerbGuid");

                    b.Navigation("Schuetze");
                });

            modelBuilder.Entity("RedDotMM.Model.Schuetze", b =>
                {
                    b.HasOne("RedDotMM.Model.Wettbewerb", "Wettbewerb")
                        .WithMany("Schuetzen")
                        .HasForeignKey("WettbewerbID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wettbewerb");
                });

            modelBuilder.Entity("RedDotMM.Model.Schuss", b =>
                {
                    b.HasOne("RedDotMM.Model.Ergebnis", "Ergebnis")
                        .WithMany("Schuesse")
                        .HasForeignKey("ErgebnisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ergebnis");
                });

            modelBuilder.Entity("RedDotMM.Model.Ergebnis", b =>
                {
                    b.Navigation("Schuesse");
                });

            modelBuilder.Entity("RedDotMM.Model.Schuetze", b =>
                {
                    b.Navigation("Ergebnisse");
                });

            modelBuilder.Entity("RedDotMM.Model.Wettbewerb", b =>
                {
                    b.Navigation("Ergebnisse");

                    b.Navigation("Schuetzen");
                });
#pragma warning restore 612, 618
        }
    }
}
